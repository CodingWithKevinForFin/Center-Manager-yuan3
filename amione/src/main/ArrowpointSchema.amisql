//General Grouping
DROP TABLE IF EXISTS PMCategory;
CREATE PUBLIC TABLE PMCategory(Name String, Category String BITMAP) USE PERSISTENGINE="FAST";
CREATE INDEX PMCategory_Idx ON PMCategory (Name HASH) USE CONSTRAINT="PRIMARY";

DROP TABLE IF EXISTS PortfolioManagers;
CREATE PUBLIC TABLE PortfolioManagers(Name String, Category String);
CREATE INDEX PortfolioManagers_Idx ON PortfolioManagers (Name HASH) USE CONSTRAINT="PRIMARY";

//FX

CREATE PUBLIC TABLE FX (Currency String BITMAP, Spot double, DeltaTMinusOne double) ;
CREATE INDEX FX_Idx ON FX (Currency HASH) USE CONSTRAINT="PRIMARY";

CREATE PUBLIC TABLE FXDelta (Currency String BITMAP, Name String BITMAP, Delta double) ;
CREATE INDEX FXDelta_Idx ON FXDelta (Currency HASH, Name HASH) USE CONSTRAINT="PRIMARY";

CREATE PUBLIC TABLE FXPnL (Currency String BITMAP, Name String BITMAP, PnL double);

CREATE TRIGGER FXPnL_join_trigger OFTYPE JOIN ON FX, FXDelta, FXPnL USE type="RIGHT" on="FX.Currency == FXDelta.Currency" selects="Currency=FX.Currency,Name=FXDelta.Name,PnL=FX.DeltaTMinusOne*FXDelta.Delta*100.0";

CREATE PUBLIC TABLE FXAgg(Name String BITMAP, FXPnL double);
CREATE TRIGGER FXAgg_agg_trigger OFTYPE AGGREGATE ON FXPnL, FXAgg USE groupBys="Name=Name" selects="FXPnL=sum(PnL)";

//Rates

CREATE PUBLIC TABLE IRSRates(Currency String BITMAP, OneYear double, TwoYear double, ThreeYear double, FiveYear double, TenYear double, TwentyYear double);
CREATE INDEX IRSRates_Idx ON IRSRates(Currency HASH) USE CONSTRAINT="PRIMARY";

CREATE PUBLIC TABLE XccyRates(Currency String BITMAP, OneMonth double, ThreeMonth double, SixMonth double, OneYear double, ThreeYear double, FiveYear double) ;
CREATE INDEX XccyRates_Idx ON XccyRates(Currency HASH) USE CONSTRAINT="PRIMARY";

CREATE PUBLIC TABLE IRSRisks(Name String BITMAP, Currency String BITMAP, OneYear double, TwoYear double, ThreeYear double, FiveYear double, TenYear double, TwentyYear double, Total double) ;
CREATE INDEX IRSRisks_Idx ON IRSRisks(Name HASH, Currency HASH) USE CONSTRAINT="PRIMARY";

CREATE PUBLIC TABLE FXDV01Risks(Name String BITMAP, Currency String BITMAP, OneMonth double, ThreeMonth double, SixMonth double, OneYear double, ThreeYear double, FiveYear double, Total double) ;
CREATE INDEX FXDV01Risks_Idx ON FXDV01Risks(Name HASH, Currency HASH) USE CONSTRAINT="PRIMARY";

CREATE PUBLIC TABLE IRSPnL(Name String BITMAP, Currency String BITMAP, OneYear double, TwoYear double, ThreeYear double, FiveYear double, TenYear double, TwentyYear double, Total double);

CREATE TRIGGER IRSPnL_join_trigger OFTYPE JOIN ON IRSRates, IRSRisks, IRSPnL USE type="RIGHT" on="IRSRates.Currency == IRSRisks.Currency" selects="Currency=IRSRates.Currency, Name=IRSRisks.Name, OneYear=IRSRisks.OneYear*IRSRates.OneYear/1000.0, TwoYear=IRSRisks.TwoYear*IRSRates.TwoYear/1000.0, ThreeYear=IRSRisks.ThreeYear*IRSRates.ThreeYear/1000.0, FiveYear=IRSRisks.FiveYear*IRSRates.FiveYear/1000.0, TenYear=IRSRisks.TenYear*IRSRates.TenYear/1000.0, TwentyYear=IRSRisks.TwentyYear*IRSRates.TwentyYear/1000.0, Total=IRSRisks.OneYear*IRSRates.OneYear/1000.0 + IRSRisks.TwoYear*IRSRates.TwoYear/1000.0 + IRSRisks.ThreeYear*IRSRates.ThreeYear/1000.0 + IRSRisks.FiveYear*IRSRates.FiveYear/1000.0 + IRSRisks.TenYear*IRSRates.TenYear/1000.0 + IRSRisks.TwentyYear*IRSRates.TwentyYear/1000.0";

CREATE PUBLIC TABLE FXDV01PnL(Name String BITMAP, Currency String BITMAP, OneMonth double, ThreeMonth double, SixMonth double, OneYear double, ThreeYear double, FiveYear double, Total double) ;

CREATE TRIGGER FXDV01PnL_join_trigger OFTYPE JOIN ON XccyRates, FXDV01Risks, FXDV01PnL USE type="RIGHT" on="XccyRates.Currency == FXDV01Risks.Currency" selects="Currency=XccyRates.Currency, Name=FXDV01Risks.Name, OneMonth=XccyRates.OneMonth*FXDV01Risks.OneMonth/1000.0, ThreeMonth=XccyRates.ThreeMonth*FXDV01Risks.ThreeMonth/1000.0, SixMonth=XccyRates.SixMonth*FXDV01Risks.SixMonth/1000.0, OneYear=XccyRates.OneYear*FXDV01Risks.OneYear/1000.0, ThreeYear=XccyRates.ThreeYear*FXDV01Risks.ThreeYear/1000.0,  FiveYear=XccyRates.FiveYear*FXDV01Risks.FiveYear/1000.0, Total=XccyRates.OneMonth*FXDV01Risks.OneMonth/1000.0 + XccyRates.ThreeMonth*FXDV01Risks.ThreeMonth/1000.0 + XccyRates.SixMonth*FXDV01Risks.SixMonth/1000.0 + XccyRates.OneYear*FXDV01Risks.OneYear/1000.0 + XccyRates.ThreeYear*FXDV01Risks.ThreeYear/1000.0 + XccyRates.FiveYear*FXDV01Risks.FiveYear/1000.0;"

CREATE PUBLIC TABLE RatesPnL(Name String BITMAP, Currency String BITMAP, PnL double) ;

CREATE TRIGGER RatesPnL_join_trigger OFTYPE JOIN ON IRSPnL, FXDV01PnL, RatesPnL USE type="OUTER" on="IRSPnL.Name == FXDV01PnL.Name && IRSPnL.Currency == FXDV01PnL.Currency" selects="Name=noNull(IRSPnL.Name,FXDV01PnL.Name,\"\"), Currency=noNull(IRSPnL.Currency,FXDV01PnL.Currency,\"\"), PnL=noNull(IRSPnL.OneYear,0.0) + noNull(IRSPnL.TwoYear,0.0) + noNull(IRSPnL.ThreeYear,0.0) + noNull(IRSPnL.FiveYear,0.0) + noNull(IRSPnL.TenYear,0.0) + noNull(IRSPnL.TwentyYear,0.0) + noNull(FXDV01PnL.OneMonth,0.0) + noNull(FXDV01PnL.ThreeMonth,0.0) + noNull(FXDV01PnL.SixMonth,0.0) + noNull(FXDV01PnL.OneYear,0.0) + noNull(FXDV01PnL.ThreeYear,0.0) + noNull(FXDV01PnL.FiveYear,0.0)";

CREATE PUBLIC TABLE RatesAgg(Name String BITMAP, RatesPnL double) ;
CREATE TRIGGER RatesAgg_agg_trigger OFTYPE AGGREGATE ON RatesPnL, RatesAgg USE groupBys="Name=Name" selects="RatesPnL=sum(PnL)";

CREATE PUBLIC TABLE RatesBbgMapping(Currency String,Period String,BbgTicker String) USE PersistEngine="FAST" RefreshPeriodMs="100" OnUndefColumn="REJECT" InitialCapacity="100";CREATE INDEX RatesBbgMapping_Idx ON RatesBbgMapping(Currency HASH,Period HASH) USE Constraint="PRIMARY";

CREATE PUBLIC TABLE RatesXccyBbgMapping(Currency String,Period String,BbgTicker String) USE PersistEngine="FAST" RefreshPeriodMs="100" OnUndefColumn="REJECT" InitialCapacity="100";CREATE INDEX RatesXccyBbgMapping_Idx ON RatesXccyBbgMapping(Currency HASH,Period HASH) USE Constraint="PRIMARY";

//Vol

CREATE PUBLIC TABLE Vols(Currency String BITMAP, Period String BITMAP, OneYear double, TwoYear double, ThreeYear double, FourYear double, FiveYear double, SevenYear double, TenYear double, FifteenYear double, TwentyYear double, ThirtyYear double);
CREATE INDEX Vols_Idx ON Vols (Currency HASH, Period HASH) USE CONSTRAINT="PRIMARY";

CREATE PUBLIC TABLE VolsChanges(Currency String BITMAP, Period String BITMAP, OneYear double, TwoYear double, ThreeYear double, FourYear double, FiveYear double, SevenYear double, TenYear double, FifteenYear double, TwentyYear double, ThirtyYear double);
CREATE INDEX VolsChanges_Idx ON VolsChanges (Currency HASH, Period HASH) USE CONSTRAINT="PRIMARY";

CREATE PUBLIC TABLE VegaRisks(Name String BITMAP, Currency String BITMAP, Period String BITMAP, OneYear double, TwoYear double, ThreeYear double, FourYear double, FiveYear double, SevenYear double, TenYear double, FifteenYear double, TwentyYear double, ThirtyYear double) ;
CREATE INDEX VegaRisks_Idx ON VegaRisks (Name HASH, Currency HASH, Period HASH) USE CONSTRAINT="PRIMARY";

CREATE PUBLIC TABLE IRVolPnL(Name String BITMAP, Currency String BITMAP, Period String BITMAP, OneYear double, TwoYear double, ThreeYear double, FourYear double, FiveYear double, SevenYear double, TenYear double, FifteenYear double, TwentyYear double, ThirtyYear double);
CREATE INDEX IRVolPnL_Idx ON IRVolPnL (Name HASH, Currency HASH, Period HASH) USE CONSTRAINT="PRIMARY";

CREATE TRIGGER IRVolPnL_join_trigger OFTYPE JOIN ON VolsChanges, VegaRisks, IRVolPnL USE type="RIGHT" on="VolsChanges.Currency == VegaRisks.Currency && VolsChanges.Period == VegaRisks.Period" selects="Name=VegaRisks.Name, Currency=VolsChanges.Currency, Period=VolsChanges.Period, OneYear=noNull(VolsChanges.OneYear, 0) * noNull( VegaRisks.OneYear, 0) /1000000.0, TwoYear=noNull(VolsChanges.TwoYear, 0) * noNull( VegaRisks.TwoYear, 0) /1000000.0, ThreeYear=noNull(VolsChanges.ThreeYear, 0) * noNull( VegaRisks.ThreeYear, 0) /1000000.0, FourYear=noNull(VolsChanges.FourYear, 0) * noNull( VegaRisks.FourYear, 0) /1000000.0, FiveYear=noNull(VolsChanges.FiveYear, 0) * noNull( VegaRisks.FiveYear, 0) /1000000.0, SevenYear=noNull(VolsChanges.SevenYear, 0) * noNull( VegaRisks.SevenYear, 0) /1000000.0, TenYear=noNull(VolsChanges.TenYear, 0) * noNull( VegaRisks.TenYear, 0) /1000000.0, FifteenYear=noNull(VolsChanges.FifteenYear, 0) * noNull( VegaRisks.FifteenYear, 0) /1000000.0, TwentyYear=noNull(VolsChanges.TwentyYear, 0) * noNull(VegaRisks.TwentyYear, 0) /1000000.0, ThirtyYear=noNull(VolsChanges.ThirtyYear, 0) * noNull(VegaRisks.ThirtyYear, 0) /1000000.0";

CREATE PUBLIC TABLE VolPnL (Name String BITMAP, Currency String BITMAP, PnL double);

CREATE TRIGGER VolPnL_agg_trigger OFTYPE AGGREGATE ON IRVolPnL, VolPnL USE groupBys="Name=Name,Currency=Currency" selects="PnL=noNull(sum(OneYear),0) + noNull(sum(TwoYear),0) + noNull(sum(ThreeYear), 0) + noNull(sum(FourYear), 0) + noNull(sum(FiveYear), 0) + noNull(sum(SevenYear), 0) + noNull(sum(TenYear), 0) + noNull(sum(FifteenYear), 0) + noNull(sum(TwentyYear),0) + noNull(sum(ThirtyYear),0)";

CREATE PUBLIC TABLE VolAgg(Name String BITMAP, VolPnL double);
CREATE TRIGGER VolAgg_agg_trigger OFTYPE AGGREGATE ON VolPnL, VolAgg USE groupBys="Name=Name" selects="VolPnL=sum(PnL)";

CREATE PUBLIC TABLE VolBbgMapping(Currency String BITMAP,Period String BITMAP,BbgTicker String) USE PersistEngine="FAST" RefreshPeriodMs="100" OnUndefColumn="REJECT" InitialCapacity="100";
CREATE INDEX VolBbgMapping_idx ON VolBbgMapping(Currency HASH,Period HASH) USE Constraint="PRIMARY";

//Commodities
CREATE PUBLIC TABLE CommoditiesData (Ticker String BITMAP, Currency String BITMAP, Price double, ContractValue String, DeltaTMinusOne double) ;
CREATE INDEX CommoditiesData_Idx ON CommoditiesData (Ticker HASH) USE CONSTRAINT="PRIMARY";

CREATE PUBLIC TABLE Commodities (Ticker String BITMAP, Currency String BITMAP, Price double, ContractValue double, PriceUSD double, DeltaTMinusOne double);
CREATE INDEX Commodities_Idx ON Commodities (Ticker HASH) USE CONSTRAINT="PRIMARY";

CREATE TRIGGER Commodities_join_trigger OFTYPE JOIN ON CommoditiesData, FX, Commodities USE type="LEFT" on="CommoditiesData.Currency == FX.Currency" selects="Ticker=Ticker,  Currency=noNull(FX.Currency,\"USD\"), Price=Price, ContractValue=(CommoditiesData.ContractValue == \"#N/A Field Not Applicable\" ? CommoditiesData.Price : (double)(CommoditiesData.ContractValue)), PriceUSD=noNull(FX.Currency,\"USD\") == \"USD\" ? Price:Price/FX.Spot, DeltaTMinusOne=CommoditiesData.DeltaTMinusOne/100";

DROP TABLE IF EXISTS CommoditiesTickerSize;
CREATE PUBLIC TABLE CommoditiesTickerSize(Ticker String BITMAP, PortfolioManager String BITMAP, Size Integer);

CREATE PUBLIC TABLE CommoditiesPnL(Name String BITMAP, Ticker String BITMAP, Size Integer, CommDelta double, PnL double);

CREATE TRIGGER CommoditiesPnL_join_trigger OFTYPE JOIN ON CommoditiesTickerSize, Commodities, CommoditiesPnL USE type="LEFT" on="CommoditiesTickerSize.Ticker == Commodities.Ticker" selects="Name=CommoditiesTickerSize.PortfolioManager, Ticker=Commodities.Ticker,  Size=Size, CommDelta=CommoditiesTickerSize.Size*PriceUSD/100000.0, PnL=CommoditiesTickerSize.Size*PriceUSD*DeltaTMinusOne/1000.0";

CREATE PUBLIC TABLE CommoditiesAgg(Name String BITMAP, CommoditiesPnL double);
CREATE TRIGGER Commodities_agg_trigger OFTYPE AGGREGATE ON CommoditiesPnL, CommoditiesAgg USE groupBys="Name=Name" selects="CommoditiesPnL=sum(PnL)";



//Equities
CREATE PUBLIC TABLE EquitiesData (Ticker String BITMAP, Currency String BITMAP, Price double, ContractValue String, DeltaTMinusOne double) ;
CREATE INDEX EquitiesData_Idx ON EquitiesData (Ticker HASH) USE CONSTRAINT="PRIMARY";

CREATE PUBLIC TABLE Equities (Ticker String BITMAP, Currency String BITMAP, Price double, ContractValue double, PriceUSD double, DeltaTMinusOne double);
CREATE INDEX Equities_Idx ON Equities (Ticker HASH) USE CONSTRAINT="PRIMARY";

CREATE TRIGGER Equities_join_trigger OFTYPE JOIN ON EquitiesData, FX, Equities USE type="LEFT" on="EquitiesData.Currency == FX.Currency" selects="Ticker=Ticker,  Currency=noNull(FX.Currency,\"USD\"), Price=Price, ContractValue=(EquitiesData.ContractValue == \"#N/A Field Not Applicable\" ? EquitiesData.Price : (double)(EquitiesData.ContractValue)), PriceUSD=noNull(FX.Currency,\"USD\") == \"USD\" ? Price:Price/FX.Spot, DeltaTMinusOne=EquitiesData.DeltaTMinusOne/100";

DROP TABLE IF EXISTS EquitiesTickerSize;
CREATE PUBLIC TABLE EquitiesTickerSize(Ticker String BITMAP, PortfolioManager String BITMAP, Size Integer);

CREATE PUBLIC TABLE EquitiesPnL(Name String BITMAP, Ticker String BITMAP, Size Integer, EquityDelta double, PnL double);

CREATE TRIGGER EquitiesPnL_join_trigger OFTYPE JOIN ON EquitiesTickerSize, Equities, EquitiesPnL USE type="LEFT" on="EquitiesTickerSize.Ticker == Equities.Ticker" selects="Name=EquitiesTickerSize.PortfolioManager, Ticker=Equities.Ticker,  Size=Size, EquityDelta=EquitiesTickerSize.Size*PriceUSD/100000.0, PnL=EquitiesTickerSize.Size*PriceUSD*DeltaTMinusOne/1000.0";

CREATE PUBLIC TABLE EquitiesAgg(Name String BITMAP, EquitiesPnL double);
CREATE TRIGGER Equities_agg_trigger OFTYPE AGGREGATE ON EquitiesPnL, EquitiesAgg USE groupBys="Name=Name" selects="EquitiesPnL=sum(PnL)";


//Summary

//Intermediate tables
CREATE PUBLIC TABLE FXJoin(Category String BITMAP, Name String BITMAP, FXPnL double);
CREATE TRIGGER FXJoin_join_trigger OFTYPE JOIN ON PortfolioManagers, FXAgg, FXJoin USE type="LEFT" on="PortfolioManagers.Name == FXAgg.Name" selects="Name=PortfolioManagers.Name,Category=PortfolioManagers.Category,FXPnL=FXPnL";

CREATE PUBLIC TABLE RatesJoin(Category String BITMAP, Name String BITMAP, FXPnL double, RatesPnL double);
CREATE TRIGGER RatesJoin_join_trigger OFTYPE JOIN ON FXJoin, RatesAgg, RatesJoin USE type="LEFT" on="FXJoin.Name == RatesAgg.Name" selects="Name=FXJoin.Name,Category=FXJoin.Category,FXPnL=FXPnL,RatesPnL=RatesAgg.RatesPnL";

CREATE PUBLIC TABLE VolJoin(Category String BITMAP, Name String BITMAP, FXPnL double, RatesPnL double, VolPnL double);
CREATE TRIGGER VolJoin_join_trigger OFTYPE JOIN ON RatesJoin, VolAgg, VolJoin USE type="LEFT" on="RatesJoin.Name == VolAgg.Name" selects="Name=RatesJoin.Name,Category=RatesJoin.Category,FXPnL=FXPnL,RatesPnL=RatesPnL,VolPnL=VolAgg.VolPnL";

CREATE PUBLIC TABLE CommoditiesJoin(Category String BITMAP, Name String BITMAP, FXPnL double, RatesPnL double, VolPnL double, CommoditiesPnL double);
CREATE TRIGGER CommoditiesJoin_join_trigger OFTYPE JOIN ON VolJoin, CommoditiesAgg, CommoditiesJoin USE type="LEFT" on="VolJoin.Name == CommoditiesAgg.Name" selects="Name=VolJoin.Name,Category=VolJoin.Category,FXPnL=FXPnL,RatesPnL=RatesPnL,VolPnL=VolPnL,CommoditiesPnL=CommoditiesAgg.CommoditiesPnL";

CREATE PUBLIC TABLE PnLSummary(Category String BITMAP, Name String BITMAP, TotalPnL double, FXPnL double, RatesPnL double, VolPnL double, CommoditiesPnL double, EquitiesPnL double);
CREATE INDEX PnLSummary_Idx ON PnLSummary (Name HASH) USE CONSTRAINT="PRIMARY";

CREATE TRIGGER PnLSummary_join_trigger OFTYPE JOIN ON CommoditiesJoin, EquitiesAgg, PnLSummary USE type="LEFT" on="CommoditiesJoin.Name == EquitiesAgg.Name" selects="Name=CommoditiesJoin.Name,Category=CommoditiesJoin.Category,FXPnL=FXPnL,RatesPnL=RatesPnL,VolPnL=VolPnL,CommoditiesPnL=CommoditiesPnL,EquitiesPnL=EquitiesAgg.EquitiesPnL, TotalPnL=noNull(FXPnL,0.0)+noNull(RatesPnL, 0.0)+noNull(VolPnL,0.0)+noNull(CommoditiesPnL,0.0)+noNull(EquitiesAgg.EquitiesPnL, 0.0)";

